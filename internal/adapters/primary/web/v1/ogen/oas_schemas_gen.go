// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// CreateUserBadRequest is response for CreateUser operation.
type CreateUserBadRequest struct{}

func (*CreateUserBadRequest) createUserRes() {}

type CreateUserCreated struct {
	UserID OptString `json:"UserID"`
}

// GetUserID returns the value of UserID.
func (s *CreateUserCreated) GetUserID() OptString {
	return s.UserID
}

// SetUserID sets the value of UserID.
func (s *CreateUserCreated) SetUserID(val OptString) {
	s.UserID = val
}

func (*CreateUserCreated) createUserRes() {}

// CreateUserInternalServerError is response for CreateUser operation.
type CreateUserInternalServerError struct{}

func (*CreateUserInternalServerError) createUserRes() {}

type CreateUserReq struct {
	Username  string   `json:"username"`
	FirstName string   `json:"first_name"`
	LastName  string   `json:"last_name"`
	Email     string   `json:"email"`
	Roles     []string `json:"roles"`
	Password  string   `json:"password"`
}

// GetUsername returns the value of Username.
func (s *CreateUserReq) GetUsername() string {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *CreateUserReq) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *CreateUserReq) GetLastName() string {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetRoles returns the value of Roles.
func (s *CreateUserReq) GetRoles() []string {
	return s.Roles
}

// GetPassword returns the value of Password.
func (s *CreateUserReq) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *CreateUserReq) SetUsername(val string) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *CreateUserReq) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *CreateUserReq) SetLastName(val string) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetRoles sets the value of Roles.
func (s *CreateUserReq) SetRoles(val []string) {
	s.Roles = val
}

// SetPassword sets the value of Password.
func (s *CreateUserReq) SetPassword(val string) {
	s.Password = val
}

type ErrResp struct {
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrResp) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrResp) SetError(val OptString) {
	s.Error = val
}

// ErrRespStatusCode wraps ErrResp with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   ErrResp
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() ErrResp {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val ErrResp) {
	s.Response = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
