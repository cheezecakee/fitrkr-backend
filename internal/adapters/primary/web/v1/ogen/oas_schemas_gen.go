// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/google/uuid"
)

type CreateUserBadRequest Error

func (*CreateUserBadRequest) createUserRes() {}

type CreateUserConflict Error

func (*CreateUserConflict) createUserRes() {}

type CreateUserCreated struct {
	UserID OptUUID `json:"UserID"`
}

// GetUserID returns the value of UserID.
func (s *CreateUserCreated) GetUserID() OptUUID {
	return s.UserID
}

// SetUserID sets the value of UserID.
func (s *CreateUserCreated) SetUserID(val OptUUID) {
	s.UserID = val
}

func (*CreateUserCreated) createUserRes() {}

type CreateUserInternalServerError Error

func (*CreateUserInternalServerError) createUserRes() {}

type CreateUserReq struct {
	Username  string   `json:"username"`
	FirstName string   `json:"first_name"`
	LastName  string   `json:"last_name"`
	Email     string   `json:"email"`
	Password  string   `json:"password"`
	Roles     []string `json:"roles"`
}

// GetUsername returns the value of Username.
func (s *CreateUserReq) GetUsername() string {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *CreateUserReq) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *CreateUserReq) GetLastName() string {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *CreateUserReq) GetPassword() string {
	return s.Password
}

// GetRoles returns the value of Roles.
func (s *CreateUserReq) GetRoles() []string {
	return s.Roles
}

// SetUsername sets the value of Username.
func (s *CreateUserReq) SetUsername(val string) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *CreateUserReq) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *CreateUserReq) SetLastName(val string) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *CreateUserReq) SetPassword(val string) {
	s.Password = val
}

// SetRoles sets the value of Roles.
func (s *CreateUserReq) SetRoles(val []string) {
	s.Roles = val
}

type DeleteUserInternalServerError Error

func (*DeleteUserInternalServerError) deleteUserRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

type DeleteUserNotFound Error

func (*DeleteUserNotFound) deleteUserRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Error string    `json:"error"`
	Code  OptString `json:"code"`
}

// GetError returns the value of Error.
func (s *Error) GetError() string {
	return s.Error
}

// GetCode returns the value of Code.
func (s *Error) GetCode() OptString {
	return s.Code
}

// SetError sets the value of Error.
func (s *Error) SetError(val string) {
	s.Error = val
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptString) {
	s.Code = val
}

type GetUserByEmailInternalServerError Error

func (*GetUserByEmailInternalServerError) getUserByEmailRes() {}

type GetUserByEmailNotFound Error

func (*GetUserByEmailNotFound) getUserByEmailRes() {}

type GetUserByIDInternalServerError Error

func (*GetUserByIDInternalServerError) getUserByIDRes() {}

type GetUserByIDNotFound Error

func (*GetUserByIDNotFound) getUserByIDRes() {}

type GetUserByUsernameInternalServerError Error

func (*GetUserByUsernameInternalServerError) getUserByUsernameRes() {}

type GetUserByUsernameNotFound Error

func (*GetUserByUsernameNotFound) getUserByUsernameRes() {}

type GetUserSubscriptionBadRequest Error

func (*GetUserSubscriptionBadRequest) getUserSubscriptionRes() {}

type GetUserSubscriptionInternalServerError Error

func (*GetUserSubscriptionInternalServerError) getUserSubscriptionRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDateTime returns new OptNilDateTime with value set to v.
func NewOptNilDateTime(v time.Time) OptNilDateTime {
	return OptNilDateTime{
		Value: v,
		Set:   true,
	}
}

// OptNilDateTime is optional nullable time.Time.
type OptNilDateTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDateTime was set.
func (o OptNilDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilDateTime) SetToNull() {
	o.Set = true
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type UpdateUserBadRequest Error

func (*UpdateUserBadRequest) updateUserRes() {}

type UpdateUserInternalServerError Error

func (*UpdateUserInternalServerError) updateUserRes() {}

type UpdateUserNotFound Error

func (*UpdateUserNotFound) updateUserRes() {}

type UpdateUserReq struct {
	Username  OptString `json:"username"`
	FirstName OptString `json:"first_name"`
	LastName  OptString `json:"last_name"`
	Email     OptString `json:"email"`
}

// GetUsername returns the value of Username.
func (s *UpdateUserReq) GetUsername() OptString {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *UpdateUserReq) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UpdateUserReq) GetLastName() OptString {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// SetUsername sets the value of Username.
func (s *UpdateUserReq) SetUsername(val OptString) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *UpdateUserReq) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UpdateUserReq) SetLastName(val OptString) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

// Ref: #/components/schemas/User
type User struct {
	ID        OptUUID     `json:"id"`
	Username  OptString   `json:"username"`
	FirstName OptString   `json:"first_name"`
	LastName  OptString   `json:"last_name"`
	Email     OptString   `json:"email"`
	Roles     []string    `json:"roles"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptUUID {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() OptString {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *User) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *User) GetLastName() OptString {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() OptString {
	return s.Email
}

// GetRoles returns the value of Roles.
func (s *User) GetRoles() []string {
	return s.Roles
}

// GetCreatedAt returns the value of CreatedAt.
func (s *User) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *User) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *User) SetID(val OptUUID) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val OptString) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *User) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *User) SetLastName(val OptString) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val OptString) {
	s.Email = val
}

// SetRoles sets the value of Roles.
func (s *User) SetRoles(val []string) {
	s.Roles = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *User) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *User) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*User) getUserByEmailRes()    {}
func (*User) getUserByIDRes()       {}
func (*User) getUserByUsernameRes() {}
func (*User) updateUserRes()        {}

// Ref: #/components/schemas/UserSubscription
type UserSubscription struct {
	Plan                OptString      `json:"plan"`
	BillingPeriod       OptNilString   `json:"billing_period"`
	StartedAt           OptDateTime    `json:"started_at"`
	ExpiresAt           OptNilDateTime `json:"expires_at"`
	AutoRenew           OptBool        `json:"auto_renew"`
	CancelledAt         OptNilDateTime `json:"cancelled_at"`
	LastPaymentAt       OptNilDateTime `json:"last_payment_at"`
	LastPaymentAmount   OptNilFloat64  `json:"last_payment_amount"`
	LastPaymentCurrency OptNilString   `json:"last_payment_currency"`
	TrialEndsAt         OptNilDateTime `json:"trial_ends_at"`
	CreatedAt           OptDateTime    `json:"created_at"`
	UpdatedAt           OptDateTime    `json:"updated_at"`
}

// GetPlan returns the value of Plan.
func (s *UserSubscription) GetPlan() OptString {
	return s.Plan
}

// GetBillingPeriod returns the value of BillingPeriod.
func (s *UserSubscription) GetBillingPeriod() OptNilString {
	return s.BillingPeriod
}

// GetStartedAt returns the value of StartedAt.
func (s *UserSubscription) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *UserSubscription) GetExpiresAt() OptNilDateTime {
	return s.ExpiresAt
}

// GetAutoRenew returns the value of AutoRenew.
func (s *UserSubscription) GetAutoRenew() OptBool {
	return s.AutoRenew
}

// GetCancelledAt returns the value of CancelledAt.
func (s *UserSubscription) GetCancelledAt() OptNilDateTime {
	return s.CancelledAt
}

// GetLastPaymentAt returns the value of LastPaymentAt.
func (s *UserSubscription) GetLastPaymentAt() OptNilDateTime {
	return s.LastPaymentAt
}

// GetLastPaymentAmount returns the value of LastPaymentAmount.
func (s *UserSubscription) GetLastPaymentAmount() OptNilFloat64 {
	return s.LastPaymentAmount
}

// GetLastPaymentCurrency returns the value of LastPaymentCurrency.
func (s *UserSubscription) GetLastPaymentCurrency() OptNilString {
	return s.LastPaymentCurrency
}

// GetTrialEndsAt returns the value of TrialEndsAt.
func (s *UserSubscription) GetTrialEndsAt() OptNilDateTime {
	return s.TrialEndsAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserSubscription) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserSubscription) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetPlan sets the value of Plan.
func (s *UserSubscription) SetPlan(val OptString) {
	s.Plan = val
}

// SetBillingPeriod sets the value of BillingPeriod.
func (s *UserSubscription) SetBillingPeriod(val OptNilString) {
	s.BillingPeriod = val
}

// SetStartedAt sets the value of StartedAt.
func (s *UserSubscription) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *UserSubscription) SetExpiresAt(val OptNilDateTime) {
	s.ExpiresAt = val
}

// SetAutoRenew sets the value of AutoRenew.
func (s *UserSubscription) SetAutoRenew(val OptBool) {
	s.AutoRenew = val
}

// SetCancelledAt sets the value of CancelledAt.
func (s *UserSubscription) SetCancelledAt(val OptNilDateTime) {
	s.CancelledAt = val
}

// SetLastPaymentAt sets the value of LastPaymentAt.
func (s *UserSubscription) SetLastPaymentAt(val OptNilDateTime) {
	s.LastPaymentAt = val
}

// SetLastPaymentAmount sets the value of LastPaymentAmount.
func (s *UserSubscription) SetLastPaymentAmount(val OptNilFloat64) {
	s.LastPaymentAmount = val
}

// SetLastPaymentCurrency sets the value of LastPaymentCurrency.
func (s *UserSubscription) SetLastPaymentCurrency(val OptNilString) {
	s.LastPaymentCurrency = val
}

// SetTrialEndsAt sets the value of TrialEndsAt.
func (s *UserSubscription) SetTrialEndsAt(val OptNilDateTime) {
	s.TrialEndsAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserSubscription) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserSubscription) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*UserSubscription) getUserSubscriptionRes() {}
