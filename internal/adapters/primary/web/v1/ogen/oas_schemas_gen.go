// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/google/uuid"
)

type CancelUserSubscriptionBadRequest Error

func (*CancelUserSubscriptionBadRequest) cancelUserSubscriptionRes() {}

type CancelUserSubscriptionInternalServerError Error

func (*CancelUserSubscriptionInternalServerError) cancelUserSubscriptionRes() {}

type CancelUserSubscriptionNotFound Error

func (*CancelUserSubscriptionNotFound) cancelUserSubscriptionRes() {}

// CancelUserSubscriptionOK is response for CancelUserSubscription operation.
type CancelUserSubscriptionOK struct{}

func (*CancelUserSubscriptionOK) cancelUserSubscriptionRes() {}

type CreateUserBadRequest Error

func (*CreateUserBadRequest) createUserRes() {}

type CreateUserConflict Error

func (*CreateUserConflict) createUserRes() {}

type CreateUserCreated struct {
	UserID OptUUID `json:"UserID"`
}

// GetUserID returns the value of UserID.
func (s *CreateUserCreated) GetUserID() OptUUID {
	return s.UserID
}

// SetUserID sets the value of UserID.
func (s *CreateUserCreated) SetUserID(val OptUUID) {
	s.UserID = val
}

func (*CreateUserCreated) createUserRes() {}

type CreateUserInternalServerError Error

func (*CreateUserInternalServerError) createUserRes() {}

type CreateUserReq struct {
	Username  string   `json:"username"`
	FirstName string   `json:"first_name"`
	LastName  string   `json:"last_name"`
	Email     string   `json:"email"`
	Password  string   `json:"password"`
	Roles     []string `json:"roles"`
}

// GetUsername returns the value of Username.
func (s *CreateUserReq) GetUsername() string {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *CreateUserReq) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *CreateUserReq) GetLastName() string {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *CreateUserReq) GetPassword() string {
	return s.Password
}

// GetRoles returns the value of Roles.
func (s *CreateUserReq) GetRoles() []string {
	return s.Roles
}

// SetUsername sets the value of Username.
func (s *CreateUserReq) SetUsername(val string) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *CreateUserReq) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *CreateUserReq) SetLastName(val string) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *CreateUserReq) SetPassword(val string) {
	s.Password = val
}

// SetRoles sets the value of Roles.
func (s *CreateUserReq) SetRoles(val []string) {
	s.Roles = val
}

type DeleteUserInternalServerError Error

func (*DeleteUserInternalServerError) deleteUserRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

type DeleteUserNotFound Error

func (*DeleteUserNotFound) deleteUserRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Error string    `json:"error"`
	Code  OptString `json:"code"`
}

// GetError returns the value of Error.
func (s *Error) GetError() string {
	return s.Error
}

// GetCode returns the value of Code.
func (s *Error) GetCode() OptString {
	return s.Code
}

// SetError sets the value of Error.
func (s *Error) SetError(val string) {
	s.Error = val
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptString) {
	s.Code = val
}

type GetUserByEmailInternalServerError Error

func (*GetUserByEmailInternalServerError) getUserByEmailRes() {}

type GetUserByEmailNotFound Error

func (*GetUserByEmailNotFound) getUserByEmailRes() {}

type GetUserByIDInternalServerError Error

func (*GetUserByIDInternalServerError) getUserByIDRes() {}

type GetUserByIDNotFound Error

func (*GetUserByIDNotFound) getUserByIDRes() {}

type GetUserByUsernameInternalServerError Error

func (*GetUserByUsernameInternalServerError) getUserByUsernameRes() {}

type GetUserByUsernameNotFound Error

func (*GetUserByUsernameNotFound) getUserByUsernameRes() {}

type GetUserSettingsBadRequest Error

func (*GetUserSettingsBadRequest) getUserSettingsRes() {}

type GetUserSettingsInternalServerError Error

func (*GetUserSettingsInternalServerError) getUserSettingsRes() {}

type GetUserStatsBadRequest Error

func (*GetUserStatsBadRequest) getUserStatsRes() {}

type GetUserStatsInternalServerError Error

func (*GetUserStatsInternalServerError) getUserStatsRes() {}

type GetUserSubscriptionBadRequest Error

func (*GetUserSubscriptionBadRequest) getUserSubscriptionRes() {}

type GetUserSubscriptionInternalServerError Error

func (*GetUserSubscriptionInternalServerError) getUserSubscriptionRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDateTime returns new OptNilDateTime with value set to v.
func NewOptNilDateTime(v time.Time) OptNilDateTime {
	return OptNilDateTime{
		Value: v,
		Set:   true,
	}
}

// OptNilDateTime is optional nullable time.Time.
type OptNilDateTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDateTime was set.
func (o OptNilDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilDateTime) SetToNull() {
	o.Set = true
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStreak returns new OptStreak with value set to v.
func NewOptStreak(v Streak) OptStreak {
	return OptStreak{
		Value: v,
		Set:   true,
	}
}

// OptStreak is optional Streak.
type OptStreak struct {
	Value Streak
	Set   bool
}

// IsSet returns true if OptStreak was set.
func (o OptStreak) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStreak) Reset() {
	var v Streak
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStreak) SetTo(v Streak) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStreak) Get() (v Streak, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStreak) Or(d Streak) Streak {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTotals returns new OptTotals with value set to v.
func NewOptTotals(v Totals) OptTotals {
	return OptTotals{
		Value: v,
		Set:   true,
	}
}

// OptTotals is optional Totals.
type OptTotals struct {
	Value Totals
	Set   bool
}

// IsSet returns true if OptTotals was set.
func (o OptTotals) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTotals) Reset() {
	var v Totals
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTotals) SetTo(v Totals) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTotals) Get() (v Totals, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTotals) Or(d Totals) Totals {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type StartUserTrialBadRequest Error

func (*StartUserTrialBadRequest) startUserTrialRes() {}

type StartUserTrialInternalServerError Error

func (*StartUserTrialInternalServerError) startUserTrialRes() {}

type StartUserTrialNotFound Error

func (*StartUserTrialNotFound) startUserTrialRes() {}

// StartUserTrialOK is response for StartUserTrial operation.
type StartUserTrialOK struct{}

func (*StartUserTrialOK) startUserTrialRes() {}

// Ref: #/components/schemas/Streak
type Streak struct {
	RestDays    int       `json:"rest_days"`
	Current     int       `json:"current"`
	Longest     int       `json:"longest"`
	LastWorkout time.Time `json:"last_workout"`
}

// GetRestDays returns the value of RestDays.
func (s *Streak) GetRestDays() int {
	return s.RestDays
}

// GetCurrent returns the value of Current.
func (s *Streak) GetCurrent() int {
	return s.Current
}

// GetLongest returns the value of Longest.
func (s *Streak) GetLongest() int {
	return s.Longest
}

// GetLastWorkout returns the value of LastWorkout.
func (s *Streak) GetLastWorkout() time.Time {
	return s.LastWorkout
}

// SetRestDays sets the value of RestDays.
func (s *Streak) SetRestDays(val int) {
	s.RestDays = val
}

// SetCurrent sets the value of Current.
func (s *Streak) SetCurrent(val int) {
	s.Current = val
}

// SetLongest sets the value of Longest.
func (s *Streak) SetLongest(val int) {
	s.Longest = val
}

// SetLastWorkout sets the value of LastWorkout.
func (s *Streak) SetLastWorkout(val time.Time) {
	s.LastWorkout = val
}

// Ref: #/components/schemas/Totals
type Totals struct {
	Workouts int `json:"workouts"`
	// Total weight lifted in kg.
	Lifted float64 `json:"lifted"`
	// Total time in minutes.
	Time int `json:"time"`
}

// GetWorkouts returns the value of Workouts.
func (s *Totals) GetWorkouts() int {
	return s.Workouts
}

// GetLifted returns the value of Lifted.
func (s *Totals) GetLifted() float64 {
	return s.Lifted
}

// GetTime returns the value of Time.
func (s *Totals) GetTime() int {
	return s.Time
}

// SetWorkouts sets the value of Workouts.
func (s *Totals) SetWorkouts(val int) {
	s.Workouts = val
}

// SetLifted sets the value of Lifted.
func (s *Totals) SetLifted(val float64) {
	s.Lifted = val
}

// SetTime sets the value of Time.
func (s *Totals) SetTime(val int) {
	s.Time = val
}

type UpdateUserBadRequest Error

func (*UpdateUserBadRequest) updateUserRes() {}

type UpdateUserBodyMetricsBadRequest Error

func (*UpdateUserBodyMetricsBadRequest) updateUserBodyMetricsRes() {}

type UpdateUserBodyMetricsInternalServerError Error

func (*UpdateUserBodyMetricsInternalServerError) updateUserBodyMetricsRes() {}

type UpdateUserBodyMetricsNotFound Error

func (*UpdateUserBodyMetricsNotFound) updateUserBodyMetricsRes() {}

type UpdateUserBodyMetricsReq struct {
	WeightValue OptFloat64 `json:"weight_value"`
	HeightValue OptFloat64 `json:"height_value"`
	Bfp         OptFloat64 `json:"bfp"`
}

// GetWeightValue returns the value of WeightValue.
func (s *UpdateUserBodyMetricsReq) GetWeightValue() OptFloat64 {
	return s.WeightValue
}

// GetHeightValue returns the value of HeightValue.
func (s *UpdateUserBodyMetricsReq) GetHeightValue() OptFloat64 {
	return s.HeightValue
}

// GetBfp returns the value of Bfp.
func (s *UpdateUserBodyMetricsReq) GetBfp() OptFloat64 {
	return s.Bfp
}

// SetWeightValue sets the value of WeightValue.
func (s *UpdateUserBodyMetricsReq) SetWeightValue(val OptFloat64) {
	s.WeightValue = val
}

// SetHeightValue sets the value of HeightValue.
func (s *UpdateUserBodyMetricsReq) SetHeightValue(val OptFloat64) {
	s.HeightValue = val
}

// SetBfp sets the value of Bfp.
func (s *UpdateUserBodyMetricsReq) SetBfp(val OptFloat64) {
	s.Bfp = val
}

type UpdateUserInternalServerError Error

func (*UpdateUserInternalServerError) updateUserRes() {}

type UpdateUserNotFound Error

func (*UpdateUserNotFound) updateUserRes() {}

type UpdateUserRecordPaymentBadRequest Error

func (*UpdateUserRecordPaymentBadRequest) updateUserRecordPaymentRes() {}

type UpdateUserRecordPaymentInternalServerError Error

func (*UpdateUserRecordPaymentInternalServerError) updateUserRecordPaymentRes() {}

type UpdateUserRecordPaymentNotFound Error

func (*UpdateUserRecordPaymentNotFound) updateUserRecordPaymentRes() {}

type UpdateUserRecordPaymentReq struct {
	Amount   OptFloat64 `json:"amount"`
	Currency OptString  `json:"currency"`
}

// GetAmount returns the value of Amount.
func (s *UpdateUserRecordPaymentReq) GetAmount() OptFloat64 {
	return s.Amount
}

// GetCurrency returns the value of Currency.
func (s *UpdateUserRecordPaymentReq) GetCurrency() OptString {
	return s.Currency
}

// SetAmount sets the value of Amount.
func (s *UpdateUserRecordPaymentReq) SetAmount(val OptFloat64) {
	s.Amount = val
}

// SetCurrency sets the value of Currency.
func (s *UpdateUserRecordPaymentReq) SetCurrency(val OptString) {
	s.Currency = val
}

type UpdateUserReq struct {
	Username  OptString `json:"username"`
	FirstName OptString `json:"first_name"`
	LastName  OptString `json:"last_name"`
	Email     OptString `json:"email"`
}

// GetUsername returns the value of Username.
func (s *UpdateUserReq) GetUsername() OptString {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *UpdateUserReq) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UpdateUserReq) GetLastName() OptString {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// SetUsername sets the value of Username.
func (s *UpdateUserReq) SetUsername(val OptString) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *UpdateUserReq) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UpdateUserReq) SetLastName(val OptString) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

type UpdateUserSettingsBadRequest Error

func (*UpdateUserSettingsBadRequest) updateUserSettingsRes() {}

type UpdateUserSettingsInternalServerError Error

func (*UpdateUserSettingsInternalServerError) updateUserSettingsRes() {}

type UpdateUserSettingsNotFound Error

func (*UpdateUserSettingsNotFound) updateUserSettingsRes() {}

type UpdateUserSettingsReq struct {
	WeightUnit      OptString `json:"weight_unit"`
	HeightUnit      OptString `json:"height_unit"`
	Theme           OptString `json:"theme"`
	Visibility      OptString `json:"visibility"`
	EmailNotif      OptBool   `json:"email_notif"`
	PushNotif       OptBool   `json:"push_notif"`
	WorkoutReminder OptBool   `json:"workout_reminder"`
	StreakReminder  OptBool   `json:"streak_reminder"`
}

// GetWeightUnit returns the value of WeightUnit.
func (s *UpdateUserSettingsReq) GetWeightUnit() OptString {
	return s.WeightUnit
}

// GetHeightUnit returns the value of HeightUnit.
func (s *UpdateUserSettingsReq) GetHeightUnit() OptString {
	return s.HeightUnit
}

// GetTheme returns the value of Theme.
func (s *UpdateUserSettingsReq) GetTheme() OptString {
	return s.Theme
}

// GetVisibility returns the value of Visibility.
func (s *UpdateUserSettingsReq) GetVisibility() OptString {
	return s.Visibility
}

// GetEmailNotif returns the value of EmailNotif.
func (s *UpdateUserSettingsReq) GetEmailNotif() OptBool {
	return s.EmailNotif
}

// GetPushNotif returns the value of PushNotif.
func (s *UpdateUserSettingsReq) GetPushNotif() OptBool {
	return s.PushNotif
}

// GetWorkoutReminder returns the value of WorkoutReminder.
func (s *UpdateUserSettingsReq) GetWorkoutReminder() OptBool {
	return s.WorkoutReminder
}

// GetStreakReminder returns the value of StreakReminder.
func (s *UpdateUserSettingsReq) GetStreakReminder() OptBool {
	return s.StreakReminder
}

// SetWeightUnit sets the value of WeightUnit.
func (s *UpdateUserSettingsReq) SetWeightUnit(val OptString) {
	s.WeightUnit = val
}

// SetHeightUnit sets the value of HeightUnit.
func (s *UpdateUserSettingsReq) SetHeightUnit(val OptString) {
	s.HeightUnit = val
}

// SetTheme sets the value of Theme.
func (s *UpdateUserSettingsReq) SetTheme(val OptString) {
	s.Theme = val
}

// SetVisibility sets the value of Visibility.
func (s *UpdateUserSettingsReq) SetVisibility(val OptString) {
	s.Visibility = val
}

// SetEmailNotif sets the value of EmailNotif.
func (s *UpdateUserSettingsReq) SetEmailNotif(val OptBool) {
	s.EmailNotif = val
}

// SetPushNotif sets the value of PushNotif.
func (s *UpdateUserSettingsReq) SetPushNotif(val OptBool) {
	s.PushNotif = val
}

// SetWorkoutReminder sets the value of WorkoutReminder.
func (s *UpdateUserSettingsReq) SetWorkoutReminder(val OptBool) {
	s.WorkoutReminder = val
}

// SetStreakReminder sets the value of StreakReminder.
func (s *UpdateUserSettingsReq) SetStreakReminder(val OptBool) {
	s.StreakReminder = val
}

type UpgradeUserPlanBadRequest Error

func (*UpgradeUserPlanBadRequest) upgradeUserPlanRes() {}

type UpgradeUserPlanInternalServerError Error

func (*UpgradeUserPlanInternalServerError) upgradeUserPlanRes() {}

type UpgradeUserPlanNotFound Error

func (*UpgradeUserPlanNotFound) upgradeUserPlanRes() {}

type UpgradeUserPlanReq struct {
	Plan          OptString `json:"plan"`
	BillingPeriod OptString `json:"billing_period"`
}

// GetPlan returns the value of Plan.
func (s *UpgradeUserPlanReq) GetPlan() OptString {
	return s.Plan
}

// GetBillingPeriod returns the value of BillingPeriod.
func (s *UpgradeUserPlanReq) GetBillingPeriod() OptString {
	return s.BillingPeriod
}

// SetPlan sets the value of Plan.
func (s *UpgradeUserPlanReq) SetPlan(val OptString) {
	s.Plan = val
}

// SetBillingPeriod sets the value of BillingPeriod.
func (s *UpgradeUserPlanReq) SetBillingPeriod(val OptString) {
	s.BillingPeriod = val
}

// Ref: #/components/schemas/User
type User struct {
	ID        OptUUID     `json:"id"`
	Username  OptString   `json:"username"`
	FirstName OptString   `json:"first_name"`
	LastName  OptString   `json:"last_name"`
	Email     OptString   `json:"email"`
	Roles     []string    `json:"roles"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptUUID {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() OptString {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *User) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *User) GetLastName() OptString {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() OptString {
	return s.Email
}

// GetRoles returns the value of Roles.
func (s *User) GetRoles() []string {
	return s.Roles
}

// GetCreatedAt returns the value of CreatedAt.
func (s *User) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *User) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *User) SetID(val OptUUID) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val OptString) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *User) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *User) SetLastName(val OptString) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val OptString) {
	s.Email = val
}

// SetRoles sets the value of Roles.
func (s *User) SetRoles(val []string) {
	s.Roles = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *User) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *User) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*User) getUserByEmailRes()    {}
func (*User) getUserByIDRes()       {}
func (*User) getUserByUsernameRes() {}
func (*User) updateUserRes()        {}

// Ref: #/components/schemas/UserBodyMetrics
type UserBodyMetrics struct {
	Weight OptNilFloat64 `json:"weight"`
	Height OptNilFloat64 `json:"height"`
	Bfp    OptNilFloat64 `json:"bfp"`
}

// GetWeight returns the value of Weight.
func (s *UserBodyMetrics) GetWeight() OptNilFloat64 {
	return s.Weight
}

// GetHeight returns the value of Height.
func (s *UserBodyMetrics) GetHeight() OptNilFloat64 {
	return s.Height
}

// GetBfp returns the value of Bfp.
func (s *UserBodyMetrics) GetBfp() OptNilFloat64 {
	return s.Bfp
}

// SetWeight sets the value of Weight.
func (s *UserBodyMetrics) SetWeight(val OptNilFloat64) {
	s.Weight = val
}

// SetHeight sets the value of Height.
func (s *UserBodyMetrics) SetHeight(val OptNilFloat64) {
	s.Height = val
}

// SetBfp sets the value of Bfp.
func (s *UserBodyMetrics) SetBfp(val OptNilFloat64) {
	s.Bfp = val
}

func (*UserBodyMetrics) updateUserBodyMetricsRes() {}

// Ref: #/components/schemas/UserPayment
type UserPayment struct {
	Amount   OptFloat64 `json:"amount"`
	Currency OptString  `json:"currency"`
}

// GetAmount returns the value of Amount.
func (s *UserPayment) GetAmount() OptFloat64 {
	return s.Amount
}

// GetCurrency returns the value of Currency.
func (s *UserPayment) GetCurrency() OptString {
	return s.Currency
}

// SetAmount sets the value of Amount.
func (s *UserPayment) SetAmount(val OptFloat64) {
	s.Amount = val
}

// SetCurrency sets the value of Currency.
func (s *UserPayment) SetCurrency(val OptString) {
	s.Currency = val
}

func (*UserPayment) updateUserRecordPaymentRes() {}

// Ref: #/components/schemas/UserPlan
type UserPlan struct {
	Plan          OptString `json:"plan"`
	BillingPeriod OptString `json:"billing_period"`
}

// GetPlan returns the value of Plan.
func (s *UserPlan) GetPlan() OptString {
	return s.Plan
}

// GetBillingPeriod returns the value of BillingPeriod.
func (s *UserPlan) GetBillingPeriod() OptString {
	return s.BillingPeriod
}

// SetPlan sets the value of Plan.
func (s *UserPlan) SetPlan(val OptString) {
	s.Plan = val
}

// SetBillingPeriod sets the value of BillingPeriod.
func (s *UserPlan) SetBillingPeriod(val OptString) {
	s.BillingPeriod = val
}

func (*UserPlan) upgradeUserPlanRes() {}

// Ref: #/components/schemas/UserSettings
type UserSettings struct {
	WeightUnit      OptFloat64  `json:"weight_unit"`
	HeightUnit      OptFloat64  `json:"height_unit"`
	Theme           OptString   `json:"theme"`
	Visibility      OptString   `json:"visibility"`
	EmailNotif      OptBool     `json:"email_notif"`
	PushNotif       OptBool     `json:"push_notif"`
	WorkoutReminder OptBool     `json:"workout_reminder"`
	StreakReminder  OptBool     `json:"streak_reminder"`
	CreatedAt       OptDateTime `json:"created_at"`
	UpdatedAt       OptDateTime `json:"updated_at"`
}

// GetWeightUnit returns the value of WeightUnit.
func (s *UserSettings) GetWeightUnit() OptFloat64 {
	return s.WeightUnit
}

// GetHeightUnit returns the value of HeightUnit.
func (s *UserSettings) GetHeightUnit() OptFloat64 {
	return s.HeightUnit
}

// GetTheme returns the value of Theme.
func (s *UserSettings) GetTheme() OptString {
	return s.Theme
}

// GetVisibility returns the value of Visibility.
func (s *UserSettings) GetVisibility() OptString {
	return s.Visibility
}

// GetEmailNotif returns the value of EmailNotif.
func (s *UserSettings) GetEmailNotif() OptBool {
	return s.EmailNotif
}

// GetPushNotif returns the value of PushNotif.
func (s *UserSettings) GetPushNotif() OptBool {
	return s.PushNotif
}

// GetWorkoutReminder returns the value of WorkoutReminder.
func (s *UserSettings) GetWorkoutReminder() OptBool {
	return s.WorkoutReminder
}

// GetStreakReminder returns the value of StreakReminder.
func (s *UserSettings) GetStreakReminder() OptBool {
	return s.StreakReminder
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserSettings) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserSettings) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetWeightUnit sets the value of WeightUnit.
func (s *UserSettings) SetWeightUnit(val OptFloat64) {
	s.WeightUnit = val
}

// SetHeightUnit sets the value of HeightUnit.
func (s *UserSettings) SetHeightUnit(val OptFloat64) {
	s.HeightUnit = val
}

// SetTheme sets the value of Theme.
func (s *UserSettings) SetTheme(val OptString) {
	s.Theme = val
}

// SetVisibility sets the value of Visibility.
func (s *UserSettings) SetVisibility(val OptString) {
	s.Visibility = val
}

// SetEmailNotif sets the value of EmailNotif.
func (s *UserSettings) SetEmailNotif(val OptBool) {
	s.EmailNotif = val
}

// SetPushNotif sets the value of PushNotif.
func (s *UserSettings) SetPushNotif(val OptBool) {
	s.PushNotif = val
}

// SetWorkoutReminder sets the value of WorkoutReminder.
func (s *UserSettings) SetWorkoutReminder(val OptBool) {
	s.WorkoutReminder = val
}

// SetStreakReminder sets the value of StreakReminder.
func (s *UserSettings) SetStreakReminder(val OptBool) {
	s.StreakReminder = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserSettings) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserSettings) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*UserSettings) getUserSettingsRes()    {}
func (*UserSettings) updateUserSettingsRes() {}

// Ref: #/components/schemas/UserStats
type UserStats struct {
	Weight    OptNilFloat64 `json:"weight"`
	Height    OptNilFloat64 `json:"height"`
	Bfp       OptNilFloat64 `json:"bfp"`
	Streak    OptStreak     `json:"streak"`
	Totals    OptTotals     `json:"totals"`
	CreatedAt OptDateTime   `json:"created_at"`
	UpdatedAt OptDateTime   `json:"updated_at"`
}

// GetWeight returns the value of Weight.
func (s *UserStats) GetWeight() OptNilFloat64 {
	return s.Weight
}

// GetHeight returns the value of Height.
func (s *UserStats) GetHeight() OptNilFloat64 {
	return s.Height
}

// GetBfp returns the value of Bfp.
func (s *UserStats) GetBfp() OptNilFloat64 {
	return s.Bfp
}

// GetStreak returns the value of Streak.
func (s *UserStats) GetStreak() OptStreak {
	return s.Streak
}

// GetTotals returns the value of Totals.
func (s *UserStats) GetTotals() OptTotals {
	return s.Totals
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserStats) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserStats) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetWeight sets the value of Weight.
func (s *UserStats) SetWeight(val OptNilFloat64) {
	s.Weight = val
}

// SetHeight sets the value of Height.
func (s *UserStats) SetHeight(val OptNilFloat64) {
	s.Height = val
}

// SetBfp sets the value of Bfp.
func (s *UserStats) SetBfp(val OptNilFloat64) {
	s.Bfp = val
}

// SetStreak sets the value of Streak.
func (s *UserStats) SetStreak(val OptStreak) {
	s.Streak = val
}

// SetTotals sets the value of Totals.
func (s *UserStats) SetTotals(val OptTotals) {
	s.Totals = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserStats) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserStats) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*UserStats) getUserStatsRes() {}

// Ref: #/components/schemas/UserSubscription
type UserSubscription struct {
	Plan                OptString      `json:"plan"`
	BillingPeriod       OptNilString   `json:"billing_period"`
	StartedAt           OptDateTime    `json:"started_at"`
	ExpiresAt           OptNilDateTime `json:"expires_at"`
	AutoRenew           OptBool        `json:"auto_renew"`
	CancelledAt         OptNilDateTime `json:"cancelled_at"`
	LastPaymentAt       OptNilDateTime `json:"last_payment_at"`
	LastPaymentAmount   OptNilFloat64  `json:"last_payment_amount"`
	LastPaymentCurrency OptNilString   `json:"last_payment_currency"`
	TrialEndsAt         OptNilDateTime `json:"trial_ends_at"`
	CreatedAt           OptDateTime    `json:"created_at"`
	UpdatedAt           OptDateTime    `json:"updated_at"`
}

// GetPlan returns the value of Plan.
func (s *UserSubscription) GetPlan() OptString {
	return s.Plan
}

// GetBillingPeriod returns the value of BillingPeriod.
func (s *UserSubscription) GetBillingPeriod() OptNilString {
	return s.BillingPeriod
}

// GetStartedAt returns the value of StartedAt.
func (s *UserSubscription) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *UserSubscription) GetExpiresAt() OptNilDateTime {
	return s.ExpiresAt
}

// GetAutoRenew returns the value of AutoRenew.
func (s *UserSubscription) GetAutoRenew() OptBool {
	return s.AutoRenew
}

// GetCancelledAt returns the value of CancelledAt.
func (s *UserSubscription) GetCancelledAt() OptNilDateTime {
	return s.CancelledAt
}

// GetLastPaymentAt returns the value of LastPaymentAt.
func (s *UserSubscription) GetLastPaymentAt() OptNilDateTime {
	return s.LastPaymentAt
}

// GetLastPaymentAmount returns the value of LastPaymentAmount.
func (s *UserSubscription) GetLastPaymentAmount() OptNilFloat64 {
	return s.LastPaymentAmount
}

// GetLastPaymentCurrency returns the value of LastPaymentCurrency.
func (s *UserSubscription) GetLastPaymentCurrency() OptNilString {
	return s.LastPaymentCurrency
}

// GetTrialEndsAt returns the value of TrialEndsAt.
func (s *UserSubscription) GetTrialEndsAt() OptNilDateTime {
	return s.TrialEndsAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserSubscription) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserSubscription) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetPlan sets the value of Plan.
func (s *UserSubscription) SetPlan(val OptString) {
	s.Plan = val
}

// SetBillingPeriod sets the value of BillingPeriod.
func (s *UserSubscription) SetBillingPeriod(val OptNilString) {
	s.BillingPeriod = val
}

// SetStartedAt sets the value of StartedAt.
func (s *UserSubscription) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *UserSubscription) SetExpiresAt(val OptNilDateTime) {
	s.ExpiresAt = val
}

// SetAutoRenew sets the value of AutoRenew.
func (s *UserSubscription) SetAutoRenew(val OptBool) {
	s.AutoRenew = val
}

// SetCancelledAt sets the value of CancelledAt.
func (s *UserSubscription) SetCancelledAt(val OptNilDateTime) {
	s.CancelledAt = val
}

// SetLastPaymentAt sets the value of LastPaymentAt.
func (s *UserSubscription) SetLastPaymentAt(val OptNilDateTime) {
	s.LastPaymentAt = val
}

// SetLastPaymentAmount sets the value of LastPaymentAmount.
func (s *UserSubscription) SetLastPaymentAmount(val OptNilFloat64) {
	s.LastPaymentAmount = val
}

// SetLastPaymentCurrency sets the value of LastPaymentCurrency.
func (s *UserSubscription) SetLastPaymentCurrency(val OptNilString) {
	s.LastPaymentCurrency = val
}

// SetTrialEndsAt sets the value of TrialEndsAt.
func (s *UserSubscription) SetTrialEndsAt(val OptNilDateTime) {
	s.TrialEndsAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserSubscription) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserSubscription) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*UserSubscription) getUserSubscriptionRes() {}
