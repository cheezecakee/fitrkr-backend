openapi: 3.0.3
info:
  title: Fitrkr API
  description: API for fitness tracking and workout management
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

paths:
  /user:
    post:
      summary: Create a new user account
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: SecurePass123!
                roles:
                  type: array
                  items:
                    type: string
                  example: ["user"]
              required:
                - username
                - first_name
                - last_name
                - email
                - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  UserID:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - Username or email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{id}:
    get:
      summary: Get user by ID
      operationId: getUserByID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update user
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete user
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/username/{username}:
    get:
      summary: Get user by username
      operationId: getUserByUsername
      tags:
        - Users
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: Username
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/email/{email}:
    get:
      summary: Get user by email
      operationId: getUserByEmail
      tags:
        - Users
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
          description: User email
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}/subscription:
    get:
      summary: Get user subscription
      operationId: getUserSubscription
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
        '400':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /user/{id}/settings:
    get:
      summary: Get user settings
      operationId: getUserSettings
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        '400':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update user settings
      operationId: updateUserSettings
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight_unit:
                  type: string
                height_unit:
                  type: string
                theme:
                  type: string
                visibility:
                  type: string
                email_notif:
                  type: boolean
                push_notif:
                  type: boolean
                workout_reminder:
                  type: boolean
                streak_reminder:
                  type: boolean
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}/stats:
    get:
      summary: Get user stats     
      operationId: getUserStats
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStats'
        '400':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}/stats/body:
    put:
      summary: Update user body metrics
      operationId: updateUserBodyMetrics
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight_value:
                  type: number
                height_value:
                  type: number
                bfp:
                  type: number
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBodyMetrics'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        username:
          type: string
          example: johndoe
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        roles:
          type: array
          items:
            type: string
          example: ["user"]
        created_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
          
    UserSubscription:
      type: object
      properties:
        plan:
          type: string
          format: plan
          example: "basic"
        billing_period:
          type: string
          format: period
          nullable: true
          example: "monthly"
        started_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
        expires_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-01-15T10:30:00Z"
        auto_renew:
          type: boolean
          example: true
        cancelled_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-01-15T10:30:00Z"
        last_payment_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-01-15T10:30:00Z"
        last_payment_amount:
          type: number
          format: double
          nullable: true
          example: 69.99
        last_payment_currency:
          type: string
          format: currency
          nullable: true
          example: "USD"
        trial_ends_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-01-15T10:30:00Z"
        created_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"

    UserSettings:
      type: object
      properties:
        weight_unit:
          type: number
          format: weightUnit
          example: 50.1
        height_unit:
          type: number
          format: heightUnit
          example: 164.5
        theme:
          type: string 
          format: theme
          example: "dark"
        visibility:
          type: string
          format: visibility
          example: "public"
        email_notif:
          type: boolean
          example: true
        push_notif:
          type: boolean
          example: true
        workout_reminder:
          type: boolean
          example: true
        streak_reminder: 
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"

    Streak:
      type: object
      properties:
        rest_days:
          type: integer
          example: 2
        current:
          type: integer
          example: 5
        longest:
          type: integer
          example: 12
        last_workout:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
      required:
        - rest_days
        - current
        - longest
        - last_workout

    Totals:
      type: object
      properties:
        workouts:
          type: integer
          example: 42
        lifted:
          type: number
          format: double
          example: 1250.5
          description: Total weight lifted in kg
        time:
          type: integer
          example: 3840
          description: Total time in minutes
      required:
        - workouts
        - lifted
        - time
  
    UserStats:
      type: object
      properties:
        weight:
          type: number
          format: weightValue
          nullable: true
          example: 50.1
        height:
          type: number
          format: heightValue
          nullable: true
          example: 164.3
        bfp:
          type: number
          format: bfp
          nullable: true
          example: 16.4
        streak:
          $ref: '#/components/schemas/Streak'
        totals:
          $ref: '#/components/schemas/Totals'
        created_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00Z"

    UserBodyMetrics:
      type: object
      properties:
        weight:
          type: number
          format: weightValue
          nullable: true
          example: 50.1
        height:
          type: number
          format: heightValue
          nullable: true
          example: 164.3
        bfp:
          type: number
          format: bfp
          nullable: true
          example: 16.4

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request parameters"
        code:
          type: string
          example: "INVALID_INPUT"
      required:
        - error
